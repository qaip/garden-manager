prog: '' # - The name of the program (default: os.path.basename(sys.argv[0]))
usage: '' # - The string describing the program usage (default: generated from arguments added to parser)
description: '' # - Text to display before the argument help (by default, no text)
epilog: '' # - Text to display after the argument help (by default, no text)
prefix_chars: '' # - The set of characters that prefix optional arguments (default: ‘-‘)
fromfile_prefix_chars: '' # - The set of characters that prefix files from which additional arguments should be read (default: None)
argument_default: '' # - The global default value for arguments (default: None)
add_help: '' # - Add a -h/--help option to the parser (default: True)
allow_abbrev: '' # - Allows long options to be abbreviated if the abbreviation is unambiguous. (default: True)
exit_on_error: '' # - Determines whether or not ArgumentParser exits with error info when an error occurs. (default: True)
group:
  title: '' # title for the sub-parser group in help output; by default “subcommands” if description is provided, otherwise uses title for positional arguments
  description: '' # description for the sub-parser group in help output, by default None
  prog: '' # usage information that will be displayed with sub-command help, by default the name of the program and any positional arguments before the subparser argument
  action: '' # the basic type of action to be taken when this argument is encountered at the command line
  dest: '' # name of the attribute under which sub-command name will be stored; by default is parent command
  required: '' # Whether or not a subcommand must be provided, by default False (added in 3.7)
  help: '' # help for sub-parser group in help output, by default None
  metavar: '' # string presenting available sub-commands in help; by default it is None and presents sub-commands in form {cmd1, cmd2, ..}
next:
  - command: ''
    ...command-options: {} # <-- same as root options
  - argument: []
    action: '' # The basic type of action to be taken when this argument is encountered at the command line.
    nargs: '' # The number of command-line arguments that should be consumed.
    const: '' # A constant value required by some action and nargs selections.
    default: '' # The value produced if the argument is absent from the command line and if it is absent from the namespace object.
    type: '' # The type to which the command-line argument should be converted.
    choices: '' # A sequence of the allowable values for the argument.
    required: '' # Whether or not the command-line option may be omitted (optionals only).
    help: '' # A brief description of what the argument does.
    metavar: '' # A name for the argument in usage messages.
    dest: '' # The name of the attribute to be added to the object returned by parse_args().

default:
  group:
    ...group-options
  command: 
    ...command-options
  argument:
    ...argument-options
